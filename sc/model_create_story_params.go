/*
 * Shortcut API
 *
 * Shortcut API
 *
 * API version: 3.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package sc
import (
	"time"
)

// Request parameters for creating a story.
type CreateStoryParams struct {
	// The description of the story.
	Description string `json:"description,omitempty"`
	// Controls the story's archived state.
	Archived bool `json:"archived,omitempty"`
	// An array of story links attached to the story.
	StoryLinks []CreateStoryLinkParams `json:"story_links,omitempty"`
	// An array of labels attached to the story.
	Labels []CreateLabelParams `json:"labels,omitempty"`
	// The type of story (feature, bug, chore).
	StoryType string `json:"story_type,omitempty"`
	// A map specifying a CustomField ID and CustomFieldEnumValue ID that represents an assertion of some value for a CustomField.
	CustomFields []CustomFieldValueParams `json:"custom_fields,omitempty"`
	// One of \"first\" or \"last\". This can be used to move the given story to the first or last position in the workflow state.
	MoveTo string `json:"move_to,omitempty"`
	// An array of IDs of files attached to the story.
	FileIds []int64 `json:"file_ids,omitempty"`
	// Given this story was converted from a task in another story, this is the original task ID that was converted to this story.
	SourceTaskId int64 `json:"source_task_id,omitempty"`
	// A manual override for the time/date the Story was completed.
	CompletedAtOverride time.Time `json:"completed_at_override,omitempty"`
	// The name of the story.
	Name string `json:"name"`
	// An array of comments to add to the story.
	Comments []CreateStoryCommentParams `json:"comments,omitempty"`
	// The ID of the epic the story belongs to.
	EpicId int64 `json:"epic_id,omitempty"`
	// The id of the story template used to create this story, if applicable. This is just an association; no content from the story template is inherited by the story simply by setting this field.
	StoryTemplateId string `json:"story_template_id,omitempty"`
	// An array of External Links associated with this story.
	ExternalLinks []string `json:"external_links,omitempty"`
	// An array of sub tasks to create.
	SubTasks []CreateSubTaskParams `json:"sub_tasks,omitempty"`
	// The ID of the member that requested the story.
	RequestedById string `json:"requested_by_id,omitempty"`
	// The ID of the iteration the story belongs to.
	IterationId int64 `json:"iteration_id,omitempty"`
	// An array of tasks connected to the story.
	Tasks []CreateTaskParams `json:"tasks,omitempty"`
	// A manual override for the time/date the Story was started.
	StartedAtOverride time.Time `json:"started_at_override,omitempty"`
	// The id of the group to associate with this story.
	GroupId string `json:"group_id,omitempty"`
	// The ID of the workflow state the story will be in.
	WorkflowStateId int64 `json:"workflow_state_id,omitempty"`
	// The time/date the Story was updated.
	UpdatedAt time.Time `json:"updated_at,omitempty"`
	// An array of UUIDs of the followers of this story.
	FollowerIds []string `json:"follower_ids,omitempty"`
	// An array of UUIDs of the owners of this story.
	OwnerIds []string `json:"owner_ids,omitempty"`
	// This field can be set to another unique ID. In the case that the Story has been imported from another tool, the ID in the other tool can be indicated here.
	ExternalId string `json:"external_id,omitempty"`
	// The numeric point estimate of the story. Can also be null, which means unestimated.
	Estimate int64 `json:"estimate,omitempty"`
	// The ID of the project the story belongs to.
	ProjectId int64 `json:"project_id,omitempty"`
	// An array of IDs of linked files attached to the story.
	LinkedFileIds []int64 `json:"linked_file_ids,omitempty"`
	// The due date of the story.
	Deadline time.Time `json:"deadline,omitempty"`
	// The time/date the Story was created.
	CreatedAt time.Time `json:"created_at,omitempty"`
}
