/*
 * Shortcut API
 *
 * Shortcut API
 *
 * API version: 3.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package generated
import (
	"time"
)

type UpdateEpic struct {
	// The Epic's description.
	Description string `json:"description,omitempty"`
	// A true/false boolean indicating whether the Epic is in archived state.
	Archived bool `json:"archived,omitempty"`
	// An array of Labels attached to the Epic.
	Labels []CreateLabelParams `json:"labels,omitempty"`
	// A manual override for the time/date the Epic was completed.
	CompletedAtOverride time.Time `json:"completed_at_override,omitempty"`
	// An array of IDs for Objectives to which this Epic is related.
	ObjectiveIds []int64 `json:"objective_ids,omitempty"`
	// The Epic's name.
	Name string `json:"name,omitempty"`
	// The Epic's planned start date.
	PlannedStartDate time.Time `json:"planned_start_date,omitempty"`
	// `Deprecated` The Epic's state (to do, in progress, or done); will be ignored when `epic_state_id` is set.
	State string `json:"state,omitempty"`
	// `Deprecated` The ID of the Milestone this Epic is related to. Use `objective_ids`.
	MilestoneId int64 `json:"milestone_id,omitempty"`
	// The ID of the member that requested the epic.
	RequestedById string `json:"requested_by_id,omitempty"`
	// The ID of the Epic State.
	EpicStateId int64 `json:"epic_state_id,omitempty"`
	// A manual override for the time/date the Epic was started.
	StartedAtOverride time.Time `json:"started_at_override,omitempty"`
	// `Deprecated` The ID of the group to associate with the epic. Use `group_ids`.
	GroupId string `json:"group_id,omitempty"`
	// An array of UUIDs for any Members you want to add as Followers on this Epic.
	FollowerIds []string `json:"follower_ids,omitempty"`
	// An array of UUIDS for Groups to which this Epic is related.
	GroupIds []string `json:"group_ids,omitempty"`
	// An array of UUIDs for any members you want to add as Owners on this Epic.
	OwnerIds []string `json:"owner_ids,omitempty"`
	// This field can be set to another unique ID. In the case that the Epic has been imported from another tool, the ID in the other tool can be indicated here.
	ExternalId string `json:"external_id,omitempty"`
	// The ID of the Epic we want to move this Epic before.
	BeforeId int64 `json:"before_id,omitempty"`
	// The ID of the Epic we want to move this Epic after.
	AfterId int64 `json:"after_id,omitempty"`
	// The Epic's deadline.
	Deadline time.Time `json:"deadline,omitempty"`
}
